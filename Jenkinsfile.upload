#!/bin/env groovy

node('master'){
    def imageName = 'android-browser'
    def branchName = "${BRANCH_NAME}"

    stage('Checkout'){
        checkout scm
    }

    stage('Build docker image') {
        docker.build(imageName, '--build-arg UID=`id -u` --build-arg GID=`id -g` .')
    }

    docker.image(imageName).inside() {
        stage('Extension') {
            sh '''
                set -x
                set -e
                yarn  
                npm run bundle
            '''
        }

        withEnv(["GRADLE_USER_HOME=${pwd()}/gradle_home","BN=${branchName}"]) {
            withCredentials([
                    file(credentialsId: '263e59fb-e9de-4e51-962c-0237c6ee167b', variable: 'CERT_PATH'),
                    string(credentialsId: '60354bba-8ed0-4df9-8f8e-5be7454c1680', variable: 'CERT_PASS'),
                    file(credentialsId: '2939d2e1-dd9a-4097-adc2-430e3d67157a', variable: 'PLAY_STORE_CERT')]) {
                sh 'echo $BN'
                if ("${BN}".contains("-re")) {
                    stage('Compile') {
                        sh './gradlew clean assembleStandardFatRelease'
                    }
                }else {
                    stage('Compile and Upload') {
                        sh '''#!/bin/bash -l
                            set -x
                            set -e
                            fastlane android alpha
                        '''
                    }
                }
            }
        }

    }
    if ("${branchName}".contains("-re")) {
        def id = "Cliqz_Browser_android"+"${branchName}".substring("${branchName}".indexOf("v"), "${branchName}".indexOf("-"))
        stage('Upload') {
            withCredentials([
                    [
                            $class          : 'UsernamePasswordMultiBinding',
                            credentialsId   : 'f1732e5f-3e84-47ad-9286-a5fa6657ec43',
                            passwordVariable: 'AWS_SECRET_ACCESS_KEY',
                            usernameVariable: 'AWS_ACCESS_KEY_ID',
                    ]
            ]) {
                def s3Path = 's3://repository.cliqz.com/dist/android/release/apk'
                def apkPath = "app/build/outputs/apk/standardFat/release/app-standard-fat-release.apk"

                sh "aws s3 cp --acl public-read --acl bucket-owner-full-control ${apkPath} ${s3Path}/${id}.apk"
                sh "aws s3 cp --acl public-read --acl bucket-owner-full-control ${s3Path}/${id}.apk ${s3Path}/latest.apk"
            }
        }
    }
}